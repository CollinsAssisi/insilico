insilico - Neuronal Simulation Library
======================================

Official homepage: http://www.iiserpune.ac.in/~collins/insilico/

Software Pre-requisites
-----------------------

insilico is written in C++ and uses C++11 standard of the langauge. Also, integration-of-ODE part of the library is handled using Boost.

* Boost 1.56.0+ - for ODE integrator Boost.odeint
* g++ 4.7.2+ - for compilation with C++11 support
* make 3.8+ - building

(Optionally)
* Python 2.7+ - if you want to use scripts for generating input files
* Gnuplot - if you want to use scripts for plotting simulation results

The installation of above softwares for all platforms is expected to be in standard directories. Please do any essential manual changes are required to the environment for using this library.

Addition to these, programmers who wish to contribute may need following packages as well.

* PHP 5+ - web documentation and site
* Python 2.7+ - automated scripts
* Gnuplot 4.5+ - plotting

Build
=====

Clone the source and run the following commands on terminal.

   make SOURCE="path/to/source/file/with/main_function.cpp"

Input and Output files
======================

Makefile generates the executable for the program which can accept three parameters as given below.

* 1st Parameter is Output file
------------------------------

  Simulation results will be written to this file as comma separated values (CSV) in following format for each line of output.

  -----------------------------------------------------------------------
  | time-step , variable-1 , variable-2 , variable-3 , ... , variable-n |
  -----------------------------------------------------------------------

  - time-step:
    current time-step

  - variable-1 to variable-n:
    all the varible values that are provided to insilico::configuration::observer

* 2nd Parameter is Neuron file
------------------------------

  Neuron(s) taking part in simulation. Line ending with a semi-colon represents a Neuron.

* 3rd Parameter is Synapse file
-------------------------------

  Synapse(s) taking part in simulation. This input file is optional argument if there is no synapse in the simulation. Line ending with a semi-colon represents a Synapse.


  Both the above parameter files has their specification as comma separated key:value pair(s) in the following format on each line.

  --------------------------------------------------------------------------
  | dxdt:<ODE-vars> , <var1>:<init> , <var2>:<init> , ... , <varN>:<init>; |
  --------------------------------------------------------------------------

  - dxdt:<ODE-vars>:
    denotes the count of ODE variables, all the variables for ODEs in the simulation code should satisfy their count and the value replacing <ODE-vars> and those many variables should follow immediately after ('dxdt' is a library keyword, <ODE-vars> should be replaced by positive integer)
  
  - <var1>:<init> to <varN>:<init>:
    variables to be used in simulation with initial values (<var1> to <varN> should be replaced by desired variable name and <init> should be replaced by initial values of the respective variables), in the case of Synapse file variabled 'pre' and 'post' are mandatory with pre-synaptic and post-synaptic neuron indices as their values respectively

* 4th Parameter is External Current file
----------------------------------------

  External current to be injected into Neuron(s) or their comparment. This input file is optional, if extrenal current is not involved or implemented into the simulation input or code.

  Use the following insilico Simulation File format for current (isfc).

  ----------------------------------------------------------
  | time   , neuron-id-1 , neuron-id-2 , ... , neuron-id-n |
  | tstart , cur-val-1   , cur-val-2   , ... , cur-val-n   |
  | +tstep , ...         , ...         , ... , ...         |
  | ...                                                    |
  | tend   , cur-val-1m  , cur-val-2m  , ... , cur-val-nm  |
  ----------------------------------------------------------

  - time:
    String to signify the header of the input file

  - neuron-id-1 to neuron-id-n:
    List of Neuron IDs (simulator specific ids, which are read from Neuron file and starts from 0). A given ID can be repeated to denote the different compartment of the same neuron. And this should be handled by programmer.

  - tstart, +tstep and tend:
    Increasing time of simulation run. Simulation starts at 'tstart', with increments of 'tstep' and ends at 'tend'.

  - (cur-val-1 to cur-val-n) to (cur-val-1m to cur-val-nm):
    External current for a specific neuron in its column for all neurons available in header and for all time steps from 'tstart' to 'tend'.

Execute
=======

Run the following command on terminal to execute the code.

  insilico.out -o<output_file>.csv -n<neuron_file.isf> -s<synapse_file.isf> -e<external_file.isfc>

  Options:
    -o   Output file
    -n   Neuron configuration file
    -s   Synapse configuration file (optional)
    -e   External current configuration file (optional)

  No space allowed between option and its value.

* Linux / Mac OS

  ./insilico.out -o<outputfile.csv> -n<neuron_file.isf> [-s<synapse_file.isf>] [-e<external_current.isfc>]

* Windows

  .\insilico.out -o<outputfile.csv> -n<neuron_file.isf> [-s<synapse_file.isf>] [-e<external_current.isfc>]

Platforms
=========

We wish to make this library portable across platform. The known minimum versions for a given platforms or compatible platforms:

Linux:   Ubuntu 11.04 +
Mac:     OS X 10.0.0 +
Windows: XP +

Library is developed majorly on Linux platform.

Version
=======

Current version: 0.17

Please refer to VERSION file for your source.

Contributing
============

Please refer to CONTRIBUTION file.

Release Notes
=============

Please refer to RELEASES file.

License
=======

This simulator library is licensed under GNU GPLv3 which is described in file LICENSE found in home directory of this project.
